{"version":3,"sources":["components/GameStartComponent.js","components/CustomInputComponent.js","components/HistoryComponent.js","containers/cows-and-bulls/GameController.js","containers/cows-and-bulls/GameStarter.js","components/GameHeader.js","App.js","serviceWorker.js","index.js"],"names":["gameStart","props","gameLevelMap","Object","keys","levels","map","levelKey","react_default","a","createElement","Button","key","onClick","setGameLevel","className","gameLevel","levelValue","Grid","container","spacing","item","xs","md","direction","alignItems","ButtonGroup","variant","color","size","aria-label","startGame","Icon","customInputComponent","inputValueArray","inputValue","split","generateInput","toConsumableArray","Array","level","_","index","historyComponent","liObj","histry","el","TableRow","TableCell","align","guss","cowCount","bullCount","Fragment","Paper","Table","TableHead","TableBody","reverse","GameController","_isMounted","setinterval","state","initialValue","try","showTime","seconds","minutes","gameState","updateTimer","copyState","objectSpread","_this","setState","checkGuess","stateCopy","findNumber","gussingNumber","guess","inputLevel","length","cow","bulls","forEach","e","i","includes","indexOf","histryObj","histryArray","push","closeModel","resetGame","reset","this","setInterval","clearTimeout","pop","join","_this2","CssBaseline","Container","maxWidth","Typography","component","style","backgroundColor","components_CustomInputComponent","react_keyboard_event_handler_default","handleKeys","onKeyEvent","setInputValue","components_HistoryComponent","concat","Fab","Add_default","Component","GAME_LEVELS","easy","medium","hard","CowsAndBulls","randomGussNumber","type","randomNumber","Math","floor","random","pow","containers_cows_and_bulls_GameController","components_GameStartComponent","useStyles","makeStyles","theme","title","defineProperty","display","textAlign","width","breakpoints","up","PrimarySearchAppBar","classes","AppBar","position","Toolbar","noWrap","card","minWidth","height","top","left","-ms-transform","-webkit-transform","App","Card","GameStarter","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.db23df44.chunk.js","sourcesContent":["import React from 'react';\nimport './GameStartComponent.scss';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Icon from '@material-ui/core/Icon';\n\n// const useStyles = makeStyles(theme => ({\n//     button: {\n//       margin: theme.spacing(1),\n//     },\n//     leftIcon: {\n//       marginRight: theme.spacing(1),\n//     },\n//     rightIcon: {\n//       marginLeft: theme.spacing(1),\n//     },\n//     iconSmall: {\n//       fontSize: 20,\n//     },\n// }));\n\nconst gameStart = props => {\n    // const classes = useStyles();\n    \n    const gameLevelMap = Object.keys(props.levels).map(levelKey => {\n        return <Button \n                key={levelKey} \n                onClick={() => props.setGameLevel(levelKey)}\n                className={props.gameLevel === props.levels[levelKey].levelValue ? \"active\" : ''}>{levelKey}</Button>;\n    });\n\n    return (\n        <div className=\"game-start-comp\">\n            <Grid container spacing={6}>\n                <Grid item xs={12} md={6}>\n                    <Grid container spacing={2} direction=\"row\" alignItems=\"center\">\n                    <Grid item>\n                        <ButtonGroup\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        size=\"large\"\n                        aria-label=\"large contained secondary button group\"\n                        >\n                            {gameLevelMap}\n                        </ButtonGroup>\n                    </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Button \n                variant=\"contained\" \n                color=\"primary\" \n                className=\"start-game\"\n                onClick={props.startGame}>\n                    Start\n                <Icon className=\"icon\">send</Icon>\n            </Button>\n        </div>\n    );\n    // return(\n    //     <div className=\"game-start-comp\">\n    //         <ul>\n    //             {gameLevelMap}\n    //         </ul>\n    //         <button\n    //             className=\"start-button\"\n    //             onClick={props.startGame}>Start</button>\n    //     </div>\n    // );\n};\n\nexport default gameStart;","import React from 'react';\nimport './CustomInputComponent.scss';\n\nconst customInputComponent = props => {\n    let inputValueArray = props.inputValue ? \n                            props.inputValue.split('') :\n                            [];\n\n    const generateInput = [...Array(props.level)].map( (_, index) => {\n        return <li key={index}>{inputValueArray[index] ? inputValueArray[index] : ''}</li>;\n    });\n\n    return(\n        <ul className=\"custom-input-component\">\n            {generateInput}\n        </ul>\n    );\n}\n\nexport default customInputComponent;","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport './HistoryComponent.scss';\n\n// const useStyles = makeStyles(theme => ({\n//   root: {\n//     width: '100%',\n//     marginTop: theme.spacing(3),\n//     overflowX: 'auto',\n//   },\n//   table: {\n//     minWidth: 650,\n//   },\n// }));\n\n\nconst historyComponent = props => {\n    const liObj = props.histry.map((el, index) => {\n        return (<TableRow key={index}>\n            <TableCell align=\"center\">{el.guss}</TableCell>\n            <TableCell align=\"center\" className=\"cowCount\">{el.cowCount}</TableCell>\n            <TableCell align=\"center\" className=\"bullCount\">{el.bullCount}</TableCell>\n        </TableRow>);\n    });\n\n    return(\n        <React.Fragment>\n        <Paper className=\"root\">\n            <Table className=\"table\">\n                <TableHead>\n                <TableRow>\n                    <TableCell align=\"center\"> Guss </TableCell>\n                    <TableCell align=\"center\">Cow Count</TableCell>\n                    <TableCell align=\"center\">Bull Count</TableCell>\n                </TableRow>\n                </TableHead>\n                <TableBody>\n                {liObj.reverse()}\n                </TableBody>\n            </Table>\n        </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default historyComponent;","import React, { Component } from 'react';\nimport './GameController.scss';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport CustomInputComponent from '../../components/CustomInputComponent';\nimport HistoryComponent from '../../components/HistoryComponent';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\nclass GameController extends Component {\n    _isMounted = false;\n    setinterval = null;\n\n    state = {\n        initialValue: '',\n        histry:[],\n        try:0,\n        showTime: {\n            seconds: '00',\n            minutes: '00'\n        },\n        gameState: false\n    }\n\n    componentDidMount() {\n        this.setinterval = setInterval(this.updateTimer, 1000);\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.setinterval);\n    }\n\n    updateTimer = () => {\n        let copyState = {...this.state};\n        let seconds = +(copyState.showTime.seconds) + 1;\n        let minutes = +(copyState.showTime.minutes);\n\n        if (seconds >= 60) {\n            minutes++;\n            seconds = 0;\n        }\n\n        if (seconds < 10) {\n            seconds = '0' + seconds;\n        }\n\n        if (minutes < 10) {\n            minutes = '0' + minutes;\n        }\n\n        this.setState({\n            showTime: {\n                seconds: seconds,\n                minutes: minutes\n            }\n        });\n    }\n\n    setInputValue(key) { \n        if (this.state.initialValue.length && (key === 'backspace' || key === 'delete')) {\n            let initialValue = this.state.initialValue.split('');\n            initialValue.pop();\n            initialValue = initialValue.join('');\n            this.setState({\n                initialValue: initialValue,\n            });\n            return;\n        }\n        \n        \n        if( (key === 'enter' || key === 'return') \n            && (this.state.initialValue.length === this.props.inputLevel)) {\n                return;\n        }\n\n        if (this.state.initialValue.length === this.props.inputLevel) {\n            return;\n        }\n\n        let initialValue = this.state.initialValue + key;\n        this.setState({\n            initialValue: initialValue,\n        });\n    }\n\n    checkGuess = () => {\n        let stateCopy = {\n            ...this.state\n        };\n\n        this.setState({\n            initialValue: '',\n        });\n\n        let findNumber = (this.props.gussingNumber + '').split('').map(el => {\n            return +el;\n        });\n\n        let guess = stateCopy.initialValue.split('').map(el => {\n            return +el;\n        });\n        \n        if (this.props.inputLevel !== guess.length) {\n            return;\n        }\n\n        let cow = 0, bulls = 0;\n\n        guess.forEach((e, i) => {\n            if (findNumber[i] === e) {\n                cow ++;\n                findNumber[i] = null;\n            } else if (findNumber.includes(e)) {\n                bulls ++;\n                findNumber[findNumber.indexOf(e)] = null;\n            }\n        });\n\n        if ( cow === this.props.inputLevel ) {\n            let histryObj = {\n                guss: this.state.initialValue,\n                cowCount: cow,\n                bullCount: bulls\n            };\n\n            let histryArray = stateCopy.histry;\n            histryArray.push(histryObj);\n            this.setState({\n                histry: histryArray,\n                gameState: true\n            });\n\n            return;\n        }\n\n        this.setState({\n            try: stateCopy.try + 1\n        });\n\n        if ( !cow && !bulls ) {\n            let histryObj = {\n                guss: this.state.initialValue,\n                cowCount: cow,\n                bullCount: bulls\n            };\n\n            let histryArray = stateCopy.histry;\n            histryArray.push(histryObj);\n            this.setState({\n                histry: histryArray\n            });\n\n            return;\n        }\n\n        if (cow || bulls) {\n            let histryObj = {\n                guss: this.state.initialValue,\n                cowCount: cow,\n                bullCount: bulls\n            };\n\n            let histryArray = stateCopy.histry;\n            histryArray.push(histryObj);\n            this.setState({\n                histry: histryArray\n            });\n        }\n    }\n\n    closeModel = () => {\n        let copyState = {...this.state};\n        this.setState({\n            gameState: !copyState.gameState\n        });\n        this.resetGame();\n    }\n\n    resetGame = () => {\n        this.props.reset();\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <CssBaseline />\n                <Container maxWidth=\"sm\">\n                    <Typography component=\"div\" className=\"game-controller\" style={{ backgroundColor: \"transparent\"}}>\n                    <CustomInputComponent \n                        level={this.props.inputLevel}\n                        inputValue={this.state.initialValue}/>\n                    <Button \n                        variant=\"contained\" \n                        color=\"primary\" \n                        className=\"start-game\"\n                        onClick={this.checkGuess}>Guss What?</Button>\n                    <div className=\"showTime\">\n                        {this.state.showTime.minutes}:{this.state.showTime.seconds}\n                    </div>\n                    <div className=\"tryCount\">{this.state.try}</div>\n                    <KeyboardEventHandler\n                        handleKeys={['numeric', 'delete', 'backspace', 'enter', 'return']}\n                        onKeyEvent={(key, e) => this.setInputValue(key)} />\n                    {this.state.histry.length ?\n                        <HistoryComponent \n                            histry={this.state.histry}/> : null\n                    }\n                    <div className={\"model \".concat(\n                        this.state.gameState ? \"showModel\" : ''\n                    )}>\n                        <h3>You Won</h3>\n                        <h3>Hidden Number:<span>{this.props.gussingNumber}</span></h3>\n                        <Fab \n                            className=\"Button-style-change\"\n                            color=\"primary\" \n                            aria-label=\"add\" \n                            onClick={this.closeModel}>\n                            <AddIcon />\n                        </Fab>\n                    </div>\n                    </Typography>\n                </Container>\n            </React.Fragment>\n        );\n    }\n\n}\n\nexport default GameController;","import React, { Component } from 'react';\nimport GameStartComponent from '../../components/GameStartComponent';\nimport GameController from './GameController';\n\nconst GAME_LEVELS = {\n    easy: {\n        levelValue: 3,\n    },\n    medium: {\n        levelValue: 4,\n    },\n    hard: {\n        levelValue: 5,\n    },\n};\n\nclass CowsAndBulls extends Component {\n    state = {\n        gameStart: false,\n        gameLevel: GAME_LEVELS.easy.levelValue,\n        randomGussNumber: 111,\n    }\n\n    componentDidMount() {\n        let randomNumber = Math.floor(Math.random() * Math.pow(10, this.state.gameLevel));\n        this.setState({\n            randomGussNumber: randomNumber\n        });\n    }\n\n    setGameLevel = (type) => {\n        let randomNumber = Math.floor(Math.random() * Math.pow(10, GAME_LEVELS[type].levelValue));\n        this.setState({\n            gameLevel: GAME_LEVELS[type].levelValue,\n            randomGussNumber: randomNumber,\n        });\n    }\n\n    startGame = () => {\n        this.setState({\n            gameStart: true\n        });\n    }\n\n    resetGame = () => {\n        this.setState({\n            gameStart: false\n        });\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                {!this.state.gameStart ? \n                    <GameStartComponent \n                        levels={GAME_LEVELS} \n                        setGameLevel={this.setGameLevel}\n                        startGame={this.startGame} \n                        gameLevel={this.state.gameLevel} /> \n                    :\n                    <GameController \n                        inputLevel={this.state.gameLevel}\n                        gussingNumber={this.state.randomGussNumber}\n                        reset={this.resetGame}/>\n                }\n            </React.Fragment>\n        );\n    }\n} \n\nexport default CowsAndBulls;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    display: 'none',\n    textAlign: 'center',\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n}));\n\nexport default function PrimarySearchAppBar() {\n  const classes = useStyles();\n  \n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Cows &amp; Bulls\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\n// import React from 'react';\n// import './GameHeader.scss';\n\n// const gameHeader = props => (\n//     <div className=\"header\">Cows And Bulls</div>\n// );\n\n// export default gameHeader;","import React from 'react';\nimport './App.scss';\nimport CowsAndBulls from './containers/cows-and-bulls/GameStarter';\nimport GameHeader from './components/GameHeader';\nimport Card from '@material-ui/core/Card';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  card: {\n    minWidth: 275,\n    width: '50%',\n    height: '600px',\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    '-ms-transform': 'translateX(-50%) translateY(-50%)',\n    '-webkit-transform': 'translate(-50%,-50%)',\n  }\n});\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div className=\"App\">\n      <Card className={classes.card}>\n        <GameHeader />\n        <CowsAndBulls />\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}